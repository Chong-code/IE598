import numpy as np
df = np.loadtxt('/Users/chong97/Desktop/Machine_Learning_1/second_week/bond.txt',encoding='utf-16')

x = df[:,0:9]
y = df[:,9]

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.33,random_state=19)

from sklearn.tree import DecisionTreeClassifier

dt = DecisionTreeClassifier(max_depth = 9, random_state = 33)
dt.fit(x_train, y_train)

from sklearn.metrics import accuracy_score
from sklearn import metrics

y_train_pred = dt.predict(x_train)
y_predict = dt.predict(x_test)

print("The following matrix is confusion matrix of Decision Tree on training dataset.")
print( metrics.accuracy_score(y_train, y_train_pred))
print( metrics.confusion_matrix(y_train, y_train_pred))

print("The following matrix is the confusion matrix of Decision Tree on testing dataset.")
print( metrics.accuracy_score(y_test, y_predict))
print( metrics.confusion_matrix(y_test, y_predict))

k_range = range(1,16)
scores = []

for i in k_range:
    dt = DecisionTreeClassifier(max_depth = i, random_state = 33)
    dt.fit(x_train,y_train)
    y_pred = dt.predict(x_test)
    scores.append(metrics.accuracy_score(y_test, y_pred))

print("The following curve shows the accuracy of Decision Tree on testing dataset when the n range from 1 to 15.")

import matplotlib.pyplot as plt

plt.plot(k_range, scores, c = 'blue')
plt.xlabel('The number of depths')
plt.ylabel('Accuracy')
plt.savefig('tree.jpg')
plt.show()
